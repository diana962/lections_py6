# Задание 1 (30 баллов)

# Даны 2 списка:

list_a = [1, 2, 39, 5, -6, 7, 8.1, 9, 10, -43, -134, 3.14, 2.55, 'Lenovo', 'Acer', 'Asus']
list_b  = [123, -1.85, 43, -4.4, 8.16, - 5, 3.26, 21, 22, -43.97, 'Dell', 'HP', 'Lenovo', 'Acer' ]

# Где будут только целые числа, которые больше 4

# ls3 = []
# for i in list_a + list_b:
#     if type(i) == int and i > 4 :
#         ls3.append(i)
#         pass

# print(ls3)

print(i for i in list_a + list_b if type(i) == int and i > 4)

# Где будут только числа с плавающей точкой, имеющие отрицательное значение

# ls3 = []
# for x in list_a + list_b:
#     if type(x) == float and x < 0:
#         ls3.append(x)
# print(ls3)


# Где будут только наименования производителей ноутбуков
# ls3 = []
# for x in list_a + list_b:
#     if type(x) == str:
#         ls3.append(x)
# print(ls3)

# Продолжить работу со списками, содержащие цифры и вывести их результат:
# ls3 = []
# for x in list_a + list_b:
#     if type(x) == int:
#         ls3.append(x)
# print(sum(ls3))


# Вставить в середину каждого списка новое значение(любое)

# list_a = [1, 2, 39, 5, -6, 7, 8.1, 9, 10, -43, -134, 3.14, 2.55, 'Lenovo', 'Acer', 'Asus']
# new = input('Emter smth: ')
# index_mid = round(len(list_a) / 2)
# list_a.insert(index_mid, new)
# print(list_a)

## print(list_a[10]) #-134 --> ищет значение по индексу

# Найти сумму элементов в каждом списке
# ls3 = []
# for x in list_a:
#     if type(x) == int:
#         ls3.append(x)
# print(sum(ls3))

# ls3 = []
# for x in list_b:
#     if type(x) == int:
#         ls3.append(x)
# print(sum(ls3))

# Посчитать количество элементов в каждом списке
# print(len(list_a))
# print(len(list_b))


# В списках с наименованиями (вывести результат):

# Проверить наличие повторяющихся данных, если есть удалить.
# Добавить в начало и конец по одному производителю.
# ls3 = []
# for x in list_a + list_b:
#     if type(x) == str:
#         ls3.append(x)
# print(set(ls3))

# ls3 = list(set(ls3))
# ls3.insert(0, 'Apple')
# ls3.insert(6, 'Samsung')
# print(ls3)

# Задание 2 (20 баллов)

# Напишите программу имитирует регистрацию пользователя.

# Программа должна запросить у Вас:
# dict_ = {
#     'name': input('Enter a name: '),
#     'email': input('Enter a email: '),
#     'password': input('Enter a password: '),
# }

# # print(dict_)
# # Программа должна вывести сообщение:
# # <name>, Вы успешно зарегистрировались, информация отправлена на <Email>
# print(dict_['name'], ', Вы успешно зарегистрировались, информация отправлена на', dict_['email'])

# Используйте разные методы форматирования сторок (5 методов) и напишите в комментариях какой метод вам больше всего понравился и почему.

# name = input('Enter a name: ')
# email = input('Enter a email: ')
# password = input('Enter a password: ')

# print(f'{name}, Вы успешно зарегистрировались, информация отправлена на {email}')
# print('{}, Вы успешно зарегистрировались, информация отправлена на {}'.format(name, email))
# print('%s, Вы успешно зарегистрировались, информация отправлена на %s' %(name, email))

#  Первый метод я использую чаще и из за этого он мне удобен.

# Продолжение задание №2 (20 баллов)

#  Ваша программа должна проверить:

# введенное имя на наличие в конце хотя бы одной цифры
# введенный пароль на наличие только чисел
# введенный email на окончание символами ".kg" 
# в случае ошибки выдавать соответствуещее сообщение

# while True:
#     name = input('Enter a name: ')
#     for i in name:
#         if type(i) == int in name:
#             print('Имя не должно содержать числа.')
#             break
#     email = input('Enter a email: ')
#     if '.kg' not in email:
#         print('Вы забыли ввести .kg в конце. ')
#         break
#     password = input('Enter a password: ')
#     if type(i) != int:
#         print('Вводить только числа. ')
#         break
        


# Задание №3 (20 баллов)

# Напишите программу, которое учитывает количество уникальных букв в слове. Уникальные буквы — это те, которые встречаются всего один раз.

# Пример 1:

# Введите слово: привет
# Кол-во уникальных букв: 6

# Пример 2:

# Введите слово: лава
# Кол-во уникальных букв: 3

# word = input('Enter smth: ')
# w = []
# for i in word:
#     if word.count(i) == 1:
#         w.append(i)
#     else:
#         pass
# print(len(w))

# Задание №4 (10 баллов)

# Асан слишком ленивый чтобы считать длину окружности и решил написать программу которая будет считать вместо него длину, помогите написать ему программу, которая спрашивает у Асана радиус окружности и выдает (округленный до верхнего значения ответ, если радиус окружности больше или равен 10) ответ (использовать библиотеку math)

# import math

# rad = float(input('Enter radius: '))
# if rad >= 10:
#     print(round(2 * rad * math.pi))
# else: 
#     print(2 * rad * math.pi)

