# Задача 1. 

# У вас есть словарь игроков, которые участвовали в трёх видах спорта. В словаре хранятся пары «Ф. И. — очки»:
 

# Один программист попросил нас для своей базы отправить ему немного другой вариант хранения этой информации.

# Напишите программу, которая объединяет ключ словаря со значением в один кортеж, и выведите результат на экран. Постарайтесь использовать как можно более эффективное решение.

# Результат работы программы:

# [('Will', 'Smith', 10, 5, 13), ('Bob', 'Robbin', 7, 5, 14), ('Rob', 'Bobbin', 12, 8, 2)]

# players = {

#     ("Will", "Smith"): (10, 5, 13),

#     ("Bob", "Robbin"): (7, 5, 14),

#     ("Rob", "Bobbin"): (12, 8, 2)

# }
# print(list(players.items()))

# ls1 = []
# for k, v in players.items():
#     t = tuple((list(k) + list(v)))
#     ls1.append(t)

# print(ls1)

# ls1 = []
# tuple(players)
# for i in tuple(players):
#     if i != players.keys():
#         ls1.append(i)
# print(ls1)

# ls2 = []
# players.values()
# for x in players.values():
#     if x != players.values():
#         ls2.append(x)
# print(ls2)


# zipped = zip(*ls1, *ls2)
# print(list(zipped))

# Задача 2

# Есть список из 10 случайных чисел. Напишите программу, которая делит эти числа на пары кортежей внутри списка, и выведите результат на экран.

# Дополнительно: решите задачу несколькими способами.

# Пример:

# Оригинальный список: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# Новый список: [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9)]

# ls = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
# print([*map(tuple, zip(ls[::2], ls[1::2]))])

# zip объединяет элементы из нескольких итерируемых объектов (например, списков) в кортежи. 
# map применяет указанную функцию к каждому элементу последовательности (например, списка) и возвращает новую последовательность результатов. 

# ls = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# result_dict = dict()
# for index, value in enumerate(ls): # Использование enumerate для итерации по элементам списка вместе с их индексами
#     if index % 2 == 0: 
#         result_dict[index] = value

# res = [(keys, value + 1) for keys, value in result_dict.items()]
# print(res)

# Задача 3

#  Посчитайте, сколько раз символ "O"и "А" встречается в строке.   
# "ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО НРАВСТВЕННО, НАДО ЗНАТЬ, ЧТО БЕЗНРАВСТВЕННО; ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО ДЕЛАТЬ, НАДО ЗНАТЬ, ЧЕГО НЕ ДОЛЖНО ДЕЛАТЬ"

# str = "ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО НРАВСТВЕННО, НАДО ЗНАТЬ, ЧТО БЕЗНРАВСТВЕННО; ДЛЯ ТОГО, ЧТОБЫ ЗНАТЬ, ЧТО ДЕЛАТЬ, НАДО ЗНАТЬ, ЧЕГО НЕ ДОЛЖНО ДЕЛАТЬ"

# count_a = 0
# count_b = 0
# for symbol_a in str:
#     if symbol_a == 'А':
#         count_a += 1
# for symbol_b in str:
#     if symbol_b == 'О':
#         count_b += 1

# print(count_a, count_b)

# Задача 4 

# Сделайте так, чтобы калькулятор спрашивал постоянно данные для совершения операций в калькулятор
# Если пользователь вводит букву q то калькулятор должен завершаться (для хардкора, если пользователь введет пустую строку, вывести строку "Нет ничего приятнее, чем знание о твоих знаниях!

while True:
    start = input('Добро пожаловать в калькулятор. Чтобы продолжить нажмите "return", а чтобы завершить введите "q"')
    if start == 'q':
        print('Калькулятор завершен.')
        break
    elif start == ' ':
        print('Нет ничего приятнее, чем знание о твоих знаниях!')
    else:
        num = float(input('Enter a number: '))
        # if num != num.isnumeric():
        #         print('Нет ничего приятнее, чем знание о твоих знаниях!')
        num2 = float(input('Enter a number: '))
        # if num2 != num.isnumeric(): 
        #         print('Нет ничего приятнее, чем знание о твоих знаниях!')
        str = int(input('What do you want to do? Choose: \n 1: если вы хотите найти сумму \n 2: если вы хотите найти разность \n 3: если вы хотите найти произведение \n 4: если вы хотите найти деление \n'))
        if str == 1:
            print(num + num2)
        elif str == 2:
            print(num - num2)
        elif str == 3:
            print(num * num2)
        elif str == 4:
            if num2 == 0:
                print('На ноль делить нельзя! ')
            else:
                print(num / num2)



# Задача 5. (дополнительно)

# Дополнительно: попробуйте реализовать программу через цикл While, "стоп-слово" для выхода из цикла "Выход"

# Напишите программу, которая запрашивает у пользователя количество песен из списка и затем названия этих песен, а на экран выводит общее время их звучания.

# Пример:

# Сколько песен выбрать? 3

# Название 1 песни: Halo

# Название 2 песни: Enjoy the Silence

# Название 3 песни: Clean

# Общее время звучания песен: 14.93 минут

# violator_songs = {

#     'World in My Eyes': 4.86,

#     'Sweetest Perfection': 4.43,

#     'Personal Jesus': 4.56,

#     'Halo': 4.9,

#     'Waiting for the Night': 6.07,

#     'Enjoy the Silence': 4.20,

#     'Policy of Truth': 4.76,

#     'Blue Dress': 4.29,

#     'Clean': 5.83

# }

# num = int(input('Программа считает продолжительность песен. Выбери до 3 песен: '))
# while True:
#     song1 = input('Enter a name of a song: ')
#     if song1 not in violator_songs:
#     # violator_songs[song1] == 0 # Не знаю, как присвоить ему значение ноль. Придется только break
#         print('Такой песни нет в плей-листе')
#         break
#     song2 = input('Enter a name of a song: ')
#     if song2 not in violator_songs:
#         # violator_songs[song2] == 0
#         print('Такой песни нет в плей-листе')
#         break
        
#     song3 = input('Enter a name of a song: ')
#     if song3 not in violator_songs:
#         # violator_songs[song3] == 0
#         print('Такой песни нет в плей-листе')
#         break
    
#     print("Продолжительность этих песен составляет: ", violator_songs[song1] + violator_songs[song2] + violator_songs[song3])

# # # альтернатива
# num = int(input('Сколько песен выбрать? '))
# song_time = 0
# sum = 0
# for i in range(num):
#     song_time = input(f'Enter a name of a song: {i + 1} ')
#     if violator_songs.get(song_time):
#         sum += violator_songs.get(song_time)
#     else:
#         print('Такой песни нет в плей-листе')
# print (f'Обшее время звучания песен {sum}')

# song = input('Enter a name of a song: ')
# print(violator_songs[song]) #5.83

# Задача 6. (дополнительно)

# Асан помимо программирования также увлекается и географией, поэтому он решил связать эти две области и написать для своего проекта небольшую программу-навигатор.

 

# Пользователь вводит количество стран N, а затем N раз вводит страну и города, которые в этой стране находятся, в одну строку. Затем пользователь вводит три названия городов. Реализуйте такую программу и для каждого из трёх городов укажите, в какой стране он находится. Если такого города нет, то выведите соответствующее сообщение.

 

# Пример: 

# Кол-во стран: 2

# 1 страна: Кыргызстан Бишкек Кант Каракол

# 2 страна: Германия Берлин Лейпциг Мюнхен

 

# 1 город: Москва

# Город Москва расположен в стране Россия.

 

# 2 город: Мюнхен

# Город Мюнхен расположен в стране Германия.

 

# 3 город: Рим

# # По городу Рим данных нет.
# Италия Рим 
# Enter names of country and it's cities: Франция Париж
# Enter names of country and it's cities: Германия Берлин
# Enter names of country and it's cities: Польша Варшава

# dict = {}

# num = int(input('Введите число стран: '))
# for num in range (1, num + 1):
#     country = input('Enter names of country and it\'s cities: ').split()
#     dict[country[0]] = country[1:]
# for k, v in dict.items():
#     cities = input('Enter a city: ')
#     if cities in v:
#         print(f'Город "{cities}" находится в стране "{k}".')
#     if cities not in v:
#         print(f'По городу "{cities}" данных нет.')