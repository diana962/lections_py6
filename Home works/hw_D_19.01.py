"""=================EASY=================="""
# /// TASK1 \\\
# Дан список целых чисел, найдите минимальное значение, не используя встроенную функцию min()
# Например:
# list_ = [20, 10, 20, 1, 100]
# Результат:
# min_number = 1

# list_ = [20, 10, 20, 1, 100]
# # Найти разность, которая имеет самое большее значение и в конце сравнить разности и вывезти
# # либо сравнить первое и второе и сравнить, а потом передать эстафету тому, кто меньше
# # print(list_[0])

# min = list_[0]
# for i in list_:
#     if min > i:
#         min = i      
# print(min)


# /// TASK2 \\\
# Дан список с кортежами, выведите список без пустых кортежей
# Например:
# tuples = [(), ('ram','15','8'), (), ('laxman', 'sita')]
# Результат:
# cleared_tuples = [('ram','15','8'), ('laxman', 'sita')]

# tuples = [(), ('ram','15','8'), (), ('laxman', 'sita')]
# ls1 =[]
# for i in tuples:
#     if i != ():
#         ls1.append(i)
# print(ls1)


# /// TASK3 \\\
# Запросите у пользователей 5 раз их имя и фамилию, но в списке сохраните лишь фамилию, также учтите, что
# у человека ФИО может состоять не только из 2 слов. При выводе должен выходить отсортированный
# в алфавитном порядке список

# Наример:
# Name: Maya Angelou
# Name: Chimamanda Ngozi Adichie
# Name: Tobias Wolff
# Name: Sherman Alexie
# Name: Jane Austen
# Результат:
# ['Adichie', 'Alexie', 'Angelou', 'Austen', 'Wolff']

# surname = input('Enter your surname: ')


# ls = []
# num = 5
# while num:
#     name = input('Enter your first nam: ')
#     num -= 1





# /// TASK4 \\\
# Вам дан список из чисел, и переменная x в которой хранится число, 
# посчитайте сколько вхождений этого числа в этом списке 

# Например:
# list_ = [8, 6, 8, 10, 8, 20, 10, 8, 8]
# x = 8
# Результат:
# 5

# list_ = [8, 6, 8, 10, 8, 20, 10, 8, 8]
# ls1 = []
# sim = list_[0]
# for i in list_:
#     if sim == i:
#         i += 1
#         ls1.append(i)
# print(len(ls1))


# /// TASK5 \\\
# Вам дан список с числами и строками, найдите сумму натуральных чисел в этом списке не используя функцию sum()
# Например:
# lists = [1, 'abcd', 3, 1.2, 4, 'xyz', 5, 'pqr', 7, -5, -12.22]
# Результат:
# 20


# lists = [1, 'abcd', 3, 1.2, 4, 'xyz', 5, 'pqr', 7, -5, -12.22]
# ls1 = []
# for i in lists:
#     if type(i) == int and i > 0:
#         ls1.append(i)
# print(ls1)

# ls1 = [1, 3, 4, 5, 7]
# count = 0
# for i in ls1:
#     count += i
# print(count)


# /// TASK6 \\\
# Вам дан список из строк, в которых длина строки равна 2 или более, в новый список запишите индексы тех строк, у которых
# первый и последний символы совпадают.
# Например:
# str_list = ['abc', 'xyz', 'aba', '1221']
# Результат:
# indexs = [2, 3]

# str = ['abc', 'xyz', 'aba', '1221']
# new = []

# for i in str:
#     if i[0] == i[-1]:
#         new.append(str.index(i))
# print(new)

# /// TASK7 \\\
# У вас есть список со вложенными списками, выведите самый длинный список и самый короткий
# Например:
# lists = [[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]
# Результат:
# max_list [13, 15, 17]
# max_list [0]

# lists = [[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]
# print(min(lists), '\n', max(lists))

# /// TASK8 \\\
# Вам дан список, напишите код, который будет соединять в новый список элементы по n-ному шагу
# Например:
# n = 3
# list_ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n']
# Результат:
# [['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]

# list_ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n']
# print(list_[::3], list_[1::3], list_[2::3])

# /// TASK9 \\\
# Напишите код для создания матрицы с размером 3x3
# Результат:
# [[1, 2, 3], [1, 2, 3], [1, 2, 3]]


# lists = [1, 2, 3]
# print([lists] * 3)


# /// TASK10 \\\
# Вам дан список со словами, пользователь вводит первую букву слова, которое он ищет, 
# ваш код должен вывести список со всеми словами начинающимися на эту букву
# Например:
# list_ = ['sun', 'flowers', 'rumor', 'stranger', 'adventure', 'architect', 'accompany', 'abandon', 'cartoon']
# хочу найти слово начинающееся на букву 's'
# Результат:
# ['sun', 'stranger']

# list_ = ['sun', 'flowers', 'rumor', 'stranger', 'adventure', 'architect', 'accompany', 'abandon', 'cartoon']
# bukva = input('Enter a letter: ')
# for word in list_:
#     if word.startswith(bukva):
#         print(word)
"""=====================MEDIUM========================"""

# /// TASK1 \\\
# Вам даны 2 списка, напишите код, который будет выводить разницу первого списка от второго и наоборот
# Например:
# color1 = ["red", "orange", "green", "blue", "white"]
# color2 = ["black", "yellow", "green", "blue"]
# Результат:
# Color1-Color2:  ['red', 'white', 'orange']
# Color2-Color1:  ['black', 'yellow']

# color1 = ["red", "orange", "green", "blue", "white"]
# color2 = ["black", "yellow", "green", "blue"]

# for i in color1, color2:
#     if i star




# /// TASK2 \\\
# Вам даны 2 списка из чисел, нужно написать код, который будет выводить True, если есть хотя бы один общий элемент,
# в ином случае False
# Например:
# list1 = [1,2,3,4,5]
# list2 = [5,6,7,8,9]
# Результат:
# True





# /// TASK3 \\\
# Ван дан список, выведите числа, частота повторений которых больше или равно K
# Например:
# list_ = [4, 6, 4, 3, 3, 8, 4, 3, 4, 3, 8, 8]
# Результат:
# res = [4, 3, 8]







# /// TASK4 \\\
# Вам дан список из 3 чисел, выведите все возможные комбинации с этими числами
# Например:
# list_ = [1, 2, 3]
# Результат:
# 1 2 3
# 1 3 2
# 2 1 3
# 2 3 1
# 3 1 2
# 3 2 1







# /// TASK5 \\\
# Создайте список с 3 вложенными списками списками, где внутри должно быть три 0
# Результат:
# [[0, 0, 0], [0, 0, 0], [0, 0, 0]]







# /// TASK6 \\\
# Вам дан список со строками, необходимо перевернуть эти строки, а также отсортировать по длине
# Например:
# colors = ["Red", "Green", "Blue", "White", "Black", "Yellow", "Orange"]
# Результат:
# ['deR', 'eulB', 'neerG', 'etihW', 'kcalB', 'wolleY', 'egnarO']






# /// TASK 7 \\\
# Вам дан список с элементами, добавьте элемент, который хранится в переменной x в этот список после каждого n-ого шага
# Например:
# nums = [1,2,3,4,5,6,7,8,9,0]
# n = 2
# x = 'a'
# Результат:
# [1, 2, 'a', 4, 'a', 6, 'a', 8, 'a', 0]





"""=================HARD===================="""
# /// TASK1 \\\
# Вам дан список со вложенными списками, выведите тот список, у которого самая большая сумма
# Например:
# lists = [[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]
# Результат:
# [10, 11, 12]







# /// TASK2 \\\
# Дан список целых чисел с повторяющимися элементами. Вам надо создать еще один список, содержащий только 
# повторяющиеся элементы. Проще говоря, новый список должен содержать элементы, которых больше одного.
# Например:
# list_ = [10, 20, 30, 20, 20, 30, 40, 50, -20, 60, 60, -20, -20]
# Результат:
# repeated = [20, 30, -20, 60]







# /// TASK3 \\\
# Вам дан список из букв, пользователь вводит 2 буквы, от какой и до какой буквы нужно соединить в одну строку, 
# ваш код должен соединить эти буквы
# Например:
# chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
# from = 'a'
# to = 'd'
# Результат:
# ['abcd', 'e', 'f', 'g']
